= SIG@

Manual instalacao do sistema.

== Software

* Ruby        >=   1.8.7/1.9.x
* PostgreSQL  >=   8.3.x
* PostGIS     >=   1.3.x

Extra:

* Thin/Ngnix or Passenger
* ImageMagick
* GIT


== Gems

* rails       >=   2.3.x
* postgres
* postgis_adapter
* haml
* authlogic
* bcrypt-ruby
* paperclip
* GeoRuby
* rghost
* will_paginate
* nofxx-money

= Desenvolvedores

== Test

* RSpec
* RSpec-Rails
* Object Daddy
* Faker


== PostgreSQL

UTF Database:

    export PGROOT="/var/lib/postgres"
    mkdir -p $PGROOT/data && chown postgres.postgres $PGROOT/data
    su - postgres -c "/usr/bin/initdb -E utf8 --locale=en_US.UTF-8 $PGROOT/data"

== PostGIS

Instalando PostGIS no PostgreSQL:

  su postgres
  psql template1

  create database template_postgis with template = template1;
  UPDATE pg_database SET datistemplate = TRUE where datname = 'template_postgis';
  \c template_postgis
  CREATE LANGUAGE plpgsql;

Importando as funcoes, agora os comandos divergem entre SOs.
Alguns exemplos:

  # archlinux
  \i /usr/share/lwpostgis.sql;
  \i /usr/share/spatial_ref_sys.sql;

  # centos x86_64
  \i /usr/share/pgsql/contrib/lwpostgis-64.sql
  \i /usr/share/pgsql/contrib/spatial_ref_sys.sql

  # debian
  \i /usr/share/postgresql-8.3-postgis/lwpostgis.sql;
  \i /usr/share/postgresql-8.3-postgis/spatial_ref_sys.sql;

  # osx
  \i /opt/local/postgis/lwpostgis.sql;
  \i /opt/local/postgis/spatial_ref_sys.sql;

Finalizando:

  GRANT ALL ON geometry_columns TO PUBLIC;
  GRANT ALL ON spatial_ref_sys TO PUBLIC;

  VACUUM FREEZE;


== Criando o Banco

  $ createdb -O <owner> -T template_postgis siga_development

Repetir para test e production.

== Rails

Copie o database.yml.sample:

  cp config/database.yml.sample config/database.yml

Migre:

  rake db:migrate
